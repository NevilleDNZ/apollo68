#!/usr/bin/algol68g-full --script #
# -*- coding: utf-8 -*- #
PR no-warning PR

[3]REAL v := (1,2,3);
v[:] +:= (5,4,3); # gives 6s? #
print(("v plusab=>6s? ",v, new line));
v[:] := v[:] * 4; # gives 24s? #
print(("v times=>24s? ",v, new line));

v[:] /:= 2; # gives 12s? #
print(("v divab=>12s? ",v, new line));
v[:] *:= 0.5; # gives 6s? #
print(("v timesab=>6s:",v, new line));
newline(standout);

v := (1,2,3);
v +:= (5,4,3); # gives 6s? #
print(("V plusab=>6s? ",v, new line));
v := v * 4; # gives 24s? #
print(("V times=>24s? ",v, new line));

v /:= 2; # gives 12s? #
print(("V divab=>12s? ",v, new line));
v *:= 0.5; # gives 6s? #
print(("V timesab=>6s:",v, new line));

newline(standout);

[3,3]REAL m := ((1,2,3),(4,5,6),(7,8,9));
m[1,] +:= (5,4,3); # gives 6s? #
print(("s plusab=>6s? ",v, new line));

m[1,] := m[1,] * 9; # gives 54s? #
print(("s times=>54s? ",m[1,], new line));

m[1,] /:= 3; # gives 18s? #
print(("s divab=>18s? ",m[1,], new line));
m[1,] *:= 1/3; # gives 6s? #
print(("s timesab=>6s:",m[1,], new line));

SKIP
